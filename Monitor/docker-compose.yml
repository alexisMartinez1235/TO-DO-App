version: '3.7'

volumes:
  prometheus-data:
  grafana-data:

services:
  grafana:
    image: grafana/grafana:${grafana_version}
    container_name: grafanaM
    # restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - 3003:3000
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:${prom_version}
    container_name: prometheusM
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - monitoring
 
  node-exporter:
    image: prom/node-exporter:${node_exporter_version}
    container_name: node_exporterM
    # restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    ports:
      - 9101:9100
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:${cadvisor_version}
    container_name: cadvisorM
    # restart: unless-stopped
    expose:
      - 8080
    ports:
      - 8088:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring
      
networks:
  monitoring:
    external: true
    name: test 