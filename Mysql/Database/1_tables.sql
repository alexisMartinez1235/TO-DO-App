USE db_todo;

-- drop procedures
DROP PROCEDURE IF EXISTS INSERT_TASK;
DROP PROCEDURE IF EXISTS LOGICAL_DELETE_TASK;
DROP PROCEDURE IF EXISTS PHYSICAL_DELETE_TASK;
-- drop tables
DROP TABLE IF EXISTS PERSON;
DROP TABLE IF EXISTS TASK;
DROP TABLE IF EXISTS PERSON_HAS_LIST;
DROP TABLE IF EXISTS LIST;

CREATE TABLE PERSON(
  id VARCHAR(36) NOT NULL,
  email VARCHAR(30) primary key NOT NULL,
  `password` VARCHAR(60) NOT NULL
);

CREATE TABLE LIST(
  id CHAR(36) primary key NOT NULL,
  listName VARCHAR(20) NOT NULL,
--  email VARCHAR(30) NOT NULL,
  inTrash BOOLEAN DEFAULT FALSE NOT NULL
--  FOREIGN KEY (email) REFERENCES PERSON(email)
);

CREATE TABLE TASK(
  id CHAR(36) primary key NOT NULL,
  `description` VARCHAR(20) NOT NULL,
  expirationDate DATE,
  activated BOOLEAN DEFAULT TRUE,
  email VARCHAR(30) NOT NULL,
  idList CHAR(36) NOT NULL,
  FOREIGN KEY (email) REFERENCES PERSON(email) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (idList) REFERENCES LIST(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PERSON_HAS_LIST(
  idList CHAR(36) NOT NULL,
  emailPerson VARCHAR(30) NOT NULL,
  isOwner BOOLEAN NOT NULL,
  canRead BOOLEAN NOT NULL,
  canWrite BOOLEAN NOT NULL,
  PRIMARY KEY (idList, emailPerson),
  FOREIGN KEY (idList) REFERENCES LIST(id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (emailPerson) REFERENCES PERSON(email) ON DELETE CASCADE ON UPDATE CASCADE
);

